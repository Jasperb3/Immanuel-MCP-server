# Docker Compose configuration for Immanuel MCP Server
# Note: Primary deployment method uses uv, this is an alternative option

version: '3.8'

services:
  immanuel-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: immanuel-mcp
    environment:
      - IMMANUEL_SERVER_NAME=immanuel-mcp-docker
      - IMMANUEL_LOG_LEVEL=INFO
      - IMMANUEL_ENABLE_CACHE=true
      - IMMANUEL_CACHE_MAX_SIZE=1000
      - IMMANUEL_EPHEMERIS_PATH=/app/ephemeris
      - PYTHONUNBUFFERED=1
    volumes:
      - ./ephemeris:/app/ephemeris
      - ./cache:/app/cache
      - ./logs:/app/logs
    ports:
      - "9999:9999"  # MCP port
    restart: unless-stopped
    command: python -m immanuel_mcp.main

  immanuel-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: immanuel-api
    environment:
      - IMMANUEL_SERVER_NAME=immanuel-api
      - IMMANUEL_LOG_LEVEL=INFO
      - IMMANUEL_ENABLE_CACHE=true
      - IMMANUEL_EPHEMERIS_PATH=/app/ephemeris
      - PYTHONUNBUFFERED=1
    volumes:
      - ./ephemeris:/app/ephemeris
      - ./cache:/app/cache
      - ./logs:/app/logs
    ports:
      - "8000:8000"  # FastAPI port
    restart: unless-stopped
    command: uvicorn immanuel_mcp.api:app --host 0.0.0.0 --port 8000
    depends_on:
      - immanuel-mcp

  # Optional: Redis for distributed caching
  redis:
    image: redis:7-alpine
    container_name: immanuel-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: PostgreSQL for storing chart data
  postgres:
    image: postgres:15-alpine
    container_name: immanuel-db
    environment:
      - POSTGRES_DB=immanuel
      - POSTGRES_USER=immanuel
      - POSTGRES_PASSWORD=changeme
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: immanuel-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - immanuel-api
    restart: unless-stopped

volumes:
  redis-data:
  postgres-data:

networks:
  default:
    name: immanuel-network

# Dockerfile content (save as 'Dockerfile' in project root):
#
# FROM python:3.11-slim
# 
# WORKDIR /app
# 
# # Install system dependencies
# RUN apt-get update && apt-get install -y \
#     wget \
#     curl \
#     && rm -rf /var/lib/apt/lists/*
# 
# # Install uv
# RUN curl -LsSf https://astral.sh/uv/install.sh | sh
# ENV PATH="/root/.cargo/bin:$PATH"
# 
# # Copy project files
# COPY pyproject.toml requirements.txt ./
# COPY immanuel_mcp/ ./immanuel_mcp/
# 
# # Create directories
# RUN mkdir -p /app/ephemeris /app/cache /app/logs
# 
# # Install Python dependencies
# RUN uv venv && \
#     . .venv/bin/activate && \
#     uv pip install -r requirements.txt
# 
# # Download ephemeris files
# RUN cd /app/ephemeris && \
#     wget -q https://www.astro.com/ftp/swisseph/ephe/semo_18.se1 && \
#     wget -q https://www.astro.com/ftp/swisseph/ephe/sepl_18.se1
# 
# # Activate venv by default
# ENV PATH="/app/.venv/bin:$PATH"
# 
# EXPOSE 8000 9999
# 
# CMD ["python", "-m", "immanuel_mcp.main"]